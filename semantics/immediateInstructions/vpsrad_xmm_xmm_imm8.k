// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPSRAD-XMM-XMM-IMM8
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS

  rule <k>
    execinstr (vpsrad Imm8:Imm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( mi(128, 0), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 128, 160), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 31)) #then mi(32, 32) #else concatenateMInt( mi(24, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 160, 192), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 31)) #then mi(32, 32) #else concatenateMInt( mi(24, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 192, 224), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 31)) #then mi(32, 32) #else concatenateMInt( mi(24, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 224, 256), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 31)) #then mi(32, 32) #else concatenateMInt( mi(24, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi)))))))
)

    </regstate>
    
endmodule

module VPSRAD-XMM-XMM-IMM8-SEMANTICS
  imports VPSRAD-XMM-XMM-IMM8
endmodule
