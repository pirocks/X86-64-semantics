// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module PSRAW-XMM-IMM8
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS

  rule <k>
    execinstr (psraw Imm8:Imm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 128), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), concatenateMInt( aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi))), aShiftRightMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), uvalueMInt((#ifMInt ugtMInt( concatenateMInt( mi(56, 0), handleImmediateWithSignExtend(Imm8, 8, 8)), mi(64, 15)) #then mi(16, 16) #else concatenateMInt( mi(8, 0), handleImmediateWithSignExtend(Imm8, 8, 8)) #fi)))))))))))
)

    </regstate>
    
endmodule

module PSRAW-XMM-IMM8-SEMANTICS
  imports PSRAW-XMM-IMM8
endmodule
