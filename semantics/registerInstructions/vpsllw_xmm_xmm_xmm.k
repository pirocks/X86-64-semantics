// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPSLLW-XMM-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpsllw R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 192, 256), mi(64, 15)) #then concatenateMInt( mi(128, 0), mi(128, 0)) #else concatenateMInt( mi(128, 0), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))))))))))) #fi)
)

    </regstate>
    
endmodule

module VPSLLW-XMM-XMM-XMM-SEMANTICS
  imports VPSLLW-XMM-XMM-XMM
endmodule
