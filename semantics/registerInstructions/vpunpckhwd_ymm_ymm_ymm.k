// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPUNPCKHWD-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpunpckhwd R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 0, 16), extractMInt( getParentValue(R2, RSMap), 0, 16)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 16, 32), extractMInt( getParentValue(R2, RSMap), 16, 32)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 32, 48), extractMInt( getParentValue(R2, RSMap), 32, 48)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 48, 64), extractMInt( getParentValue(R2, RSMap), 48, 64)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), extractMInt( getParentValue(R2, RSMap), 128, 144)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), extractMInt( getParentValue(R2, RSMap), 144, 160)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), extractMInt( getParentValue(R2, RSMap), 160, 176)), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), extractMInt( getParentValue(R2, RSMap), 176, 192)))))))))
)

    </regstate>
    
endmodule

module VPUNPCKHWD-YMM-YMM-YMM-SEMANTICS
  imports VPUNPCKHWD-YMM-YMM-YMM
endmodule
