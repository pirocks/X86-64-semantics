// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPCMPEQW-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpcmpeqw R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 0, 16), extractMInt( getParentValue(R1, RSMap), 0, 16)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 16, 32), extractMInt( getParentValue(R1, RSMap), 16, 32)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 32, 48), extractMInt( getParentValue(R1, RSMap), 32, 48)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 48, 64), extractMInt( getParentValue(R1, RSMap), 48, 64)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 64, 80), extractMInt( getParentValue(R1, RSMap), 64, 80)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 80, 96), extractMInt( getParentValue(R1, RSMap), 80, 96)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 96, 112), extractMInt( getParentValue(R1, RSMap), 96, 112)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 112, 128), extractMInt( getParentValue(R1, RSMap), 112, 128)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), extractMInt( getParentValue(R1, RSMap), 128, 144)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), extractMInt( getParentValue(R1, RSMap), 144, 160)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), extractMInt( getParentValue(R1, RSMap), 160, 176)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), extractMInt( getParentValue(R1, RSMap), 176, 192)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), extractMInt( getParentValue(R1, RSMap), 192, 208)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), extractMInt( getParentValue(R1, RSMap), 208, 224)) #then mi(16, 65535) #else mi(16, 0) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), extractMInt( getParentValue(R1, RSMap), 224, 240)) #then mi(16, 65535) #else mi(16, 0) #fi), (#ifMInt eqMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), extractMInt( getParentValue(R1, RSMap), 240, 256)) #then mi(16, 65535) #else mi(16, 0) #fi))))))))))))))))
)

    </regstate>
    
endmodule

module VPCMPEQW-YMM-YMM-YMM-SEMANTICS
  imports VPCMPEQW-YMM-YMM-YMM
endmodule
