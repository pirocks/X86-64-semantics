// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPABSB-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpabsb R1:Ymm, R2:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 0, 8), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 0, 8))) #else extractMInt( getParentValue(R1, RSMap), 0, 8) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 8, 16), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 8, 16))) #else extractMInt( getParentValue(R1, RSMap), 8, 16) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 16, 24), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 16, 24))) #else extractMInt( getParentValue(R1, RSMap), 16, 24) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 24, 32), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 24, 32))) #else extractMInt( getParentValue(R1, RSMap), 24, 32) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 32, 40), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 32, 40))) #else extractMInt( getParentValue(R1, RSMap), 32, 40) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 40, 48), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 40, 48))) #else extractMInt( getParentValue(R1, RSMap), 40, 48) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 48, 56))) #else extractMInt( getParentValue(R1, RSMap), 48, 56) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 56, 64), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 56, 64))) #else extractMInt( getParentValue(R1, RSMap), 56, 64) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 64, 72), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 64, 72))) #else extractMInt( getParentValue(R1, RSMap), 64, 72) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 72, 80), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 72, 80))) #else extractMInt( getParentValue(R1, RSMap), 72, 80) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 80, 88), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 80, 88))) #else extractMInt( getParentValue(R1, RSMap), 80, 88) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 88, 96), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 88, 96))) #else extractMInt( getParentValue(R1, RSMap), 88, 96) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 96, 104), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 96, 104))) #else extractMInt( getParentValue(R1, RSMap), 96, 104) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 104, 112), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 104, 112))) #else extractMInt( getParentValue(R1, RSMap), 104, 112) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 112, 120), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 112, 120))) #else extractMInt( getParentValue(R1, RSMap), 112, 120) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 120, 128), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 120, 128))) #else extractMInt( getParentValue(R1, RSMap), 120, 128) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 128, 136), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 128, 136))) #else extractMInt( getParentValue(R1, RSMap), 128, 136) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 136, 144), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 136, 144))) #else extractMInt( getParentValue(R1, RSMap), 136, 144) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 144, 152), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 144, 152))) #else extractMInt( getParentValue(R1, RSMap), 144, 152) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 152, 160), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 152, 160))) #else extractMInt( getParentValue(R1, RSMap), 152, 160) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 160, 168), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 160, 168))) #else extractMInt( getParentValue(R1, RSMap), 160, 168) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 168, 176), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 168, 176))) #else extractMInt( getParentValue(R1, RSMap), 168, 176) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 176, 184), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 176, 184))) #else extractMInt( getParentValue(R1, RSMap), 176, 184) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 184, 192), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 184, 192))) #else extractMInt( getParentValue(R1, RSMap), 184, 192) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 192, 200), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 192, 200))) #else extractMInt( getParentValue(R1, RSMap), 192, 200) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 200, 208), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 200, 208))) #else extractMInt( getParentValue(R1, RSMap), 200, 208) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 208, 216), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 208, 216))) #else extractMInt( getParentValue(R1, RSMap), 208, 216) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 216, 224), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 216, 224))) #else extractMInt( getParentValue(R1, RSMap), 216, 224) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 224, 232), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 224, 232))) #else extractMInt( getParentValue(R1, RSMap), 224, 232) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 232, 240), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 232, 240))) #else extractMInt( getParentValue(R1, RSMap), 232, 240) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 240, 248), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 240, 248))) #else extractMInt( getParentValue(R1, RSMap), 240, 248) #fi), (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 248, 256), mi(8, 127)) #then addMInt(mi(8, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 248, 256))) #else extractMInt( getParentValue(R1, RSMap), 248, 256) #fi))))))))))))))))))))))))))))))))
)

    </regstate>
    
endmodule

module VPABSB-YMM-YMM-SEMANTICS
  imports VPABSB-YMM-YMM
endmodule
