// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module TZCNTQ-R64-R64
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (tzcntq R1:R64, R2:R64,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 63, 64), mi(1, 1)) #then mi(64, 0) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 62, 63), mi(1, 1)) #then mi(64, 1) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 61, 62), mi(1, 1)) #then mi(64, 2) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 60, 61), mi(1, 1)) #then mi(64, 3) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 59, 60), mi(1, 1)) #then mi(64, 4) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 58, 59), mi(1, 1)) #then mi(64, 5) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 57, 58), mi(1, 1)) #then mi(64, 6) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 56, 57), mi(1, 1)) #then mi(64, 7) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 55, 56), mi(1, 1)) #then mi(64, 8) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 54, 55), mi(1, 1)) #then mi(64, 9) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 53, 54), mi(1, 1)) #then mi(64, 10) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 52, 53), mi(1, 1)) #then mi(64, 11) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 51, 52), mi(1, 1)) #then mi(64, 12) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 50, 51), mi(1, 1)) #then mi(64, 13) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 49, 50), mi(1, 1)) #then mi(64, 14) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 48, 49), mi(1, 1)) #then mi(64, 15) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 47, 48), mi(1, 1)) #then mi(64, 16) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 46, 47), mi(1, 1)) #then mi(64, 17) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 45, 46), mi(1, 1)) #then mi(64, 18) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 44, 45), mi(1, 1)) #then mi(64, 19) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 43, 44), mi(1, 1)) #then mi(64, 20) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 42, 43), mi(1, 1)) #then mi(64, 21) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 41, 42), mi(1, 1)) #then mi(64, 22) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 40, 41), mi(1, 1)) #then mi(64, 23) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 39, 40), mi(1, 1)) #then mi(64, 24) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 38, 39), mi(1, 1)) #then mi(64, 25) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 37, 38), mi(1, 1)) #then mi(64, 26) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 36, 37), mi(1, 1)) #then mi(64, 27) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 35, 36), mi(1, 1)) #then mi(64, 28) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 34, 35), mi(1, 1)) #then mi(64, 29) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 33, 34), mi(1, 1)) #then mi(64, 30) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 32, 33), mi(1, 1)) #then mi(64, 31) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 31, 32), mi(1, 1)) #then mi(64, 32) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 30, 31), mi(1, 1)) #then mi(64, 33) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 29, 30), mi(1, 1)) #then mi(64, 34) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 28, 29), mi(1, 1)) #then mi(64, 35) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 27, 28), mi(1, 1)) #then mi(64, 36) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 26, 27), mi(1, 1)) #then mi(64, 37) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 25, 26), mi(1, 1)) #then mi(64, 38) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 24, 25), mi(1, 1)) #then mi(64, 39) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 23, 24), mi(1, 1)) #then mi(64, 40) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 22, 23), mi(1, 1)) #then mi(64, 41) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 21, 22), mi(1, 1)) #then mi(64, 42) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 20, 21), mi(1, 1)) #then mi(64, 43) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 19, 20), mi(1, 1)) #then mi(64, 44) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 18, 19), mi(1, 1)) #then mi(64, 45) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 17, 18), mi(1, 1)) #then mi(64, 46) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 16, 17), mi(1, 1)) #then mi(64, 47) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 15, 16), mi(1, 1)) #then mi(64, 48) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 14, 15), mi(1, 1)) #then mi(64, 49) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 13, 14), mi(1, 1)) #then mi(64, 50) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 12, 13), mi(1, 1)) #then mi(64, 51) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 11, 12), mi(1, 1)) #then mi(64, 52) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 10, 11), mi(1, 1)) #then mi(64, 53) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 9, 10), mi(1, 1)) #then mi(64, 54) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 8, 9), mi(1, 1)) #then mi(64, 55) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 7, 8), mi(1, 1)) #then mi(64, 56) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 6, 7), mi(1, 1)) #then mi(64, 57) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 5, 6), mi(1, 1)) #then mi(64, 58) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 4, 5), mi(1, 1)) #then mi(64, 59) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 3, 4), mi(1, 1)) #then mi(64, 60) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 2, 3), mi(1, 1)) #then mi(64, 61) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 1, 2), mi(1, 1)) #then mi(64, 62) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 0, 1), mi(1, 1)) #then mi(64, 63) #else mi(64, 64) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi)

"CF" |-> (#ifMInt eqMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 63, 64), mi(1, 1)) #then mi(64, 0) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 62, 63), mi(1, 1)) #then mi(64, 1) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 61, 62), mi(1, 1)) #then mi(64, 2) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 60, 61), mi(1, 1)) #then mi(64, 3) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 59, 60), mi(1, 1)) #then mi(64, 4) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 58, 59), mi(1, 1)) #then mi(64, 5) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 57, 58), mi(1, 1)) #then mi(64, 6) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 56, 57), mi(1, 1)) #then mi(64, 7) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 55, 56), mi(1, 1)) #then mi(64, 8) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 54, 55), mi(1, 1)) #then mi(64, 9) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 53, 54), mi(1, 1)) #then mi(64, 10) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 52, 53), mi(1, 1)) #then mi(64, 11) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 51, 52), mi(1, 1)) #then mi(64, 12) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 50, 51), mi(1, 1)) #then mi(64, 13) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 49, 50), mi(1, 1)) #then mi(64, 14) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 48, 49), mi(1, 1)) #then mi(64, 15) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 47, 48), mi(1, 1)) #then mi(64, 16) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 46, 47), mi(1, 1)) #then mi(64, 17) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 45, 46), mi(1, 1)) #then mi(64, 18) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 44, 45), mi(1, 1)) #then mi(64, 19) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 43, 44), mi(1, 1)) #then mi(64, 20) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 42, 43), mi(1, 1)) #then mi(64, 21) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 41, 42), mi(1, 1)) #then mi(64, 22) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 40, 41), mi(1, 1)) #then mi(64, 23) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 39, 40), mi(1, 1)) #then mi(64, 24) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 38, 39), mi(1, 1)) #then mi(64, 25) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 37, 38), mi(1, 1)) #then mi(64, 26) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 36, 37), mi(1, 1)) #then mi(64, 27) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 35, 36), mi(1, 1)) #then mi(64, 28) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 34, 35), mi(1, 1)) #then mi(64, 29) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 33, 34), mi(1, 1)) #then mi(64, 30) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 32, 33), mi(1, 1)) #then mi(64, 31) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 31, 32), mi(1, 1)) #then mi(64, 32) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 30, 31), mi(1, 1)) #then mi(64, 33) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 29, 30), mi(1, 1)) #then mi(64, 34) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 28, 29), mi(1, 1)) #then mi(64, 35) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 27, 28), mi(1, 1)) #then mi(64, 36) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 26, 27), mi(1, 1)) #then mi(64, 37) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 25, 26), mi(1, 1)) #then mi(64, 38) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 24, 25), mi(1, 1)) #then mi(64, 39) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 23, 24), mi(1, 1)) #then mi(64, 40) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 22, 23), mi(1, 1)) #then mi(64, 41) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 21, 22), mi(1, 1)) #then mi(64, 42) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 20, 21), mi(1, 1)) #then mi(64, 43) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 19, 20), mi(1, 1)) #then mi(64, 44) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 18, 19), mi(1, 1)) #then mi(64, 45) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 17, 18), mi(1, 1)) #then mi(64, 46) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 16, 17), mi(1, 1)) #then mi(64, 47) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 15, 16), mi(1, 1)) #then mi(64, 48) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 14, 15), mi(1, 1)) #then mi(64, 49) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 13, 14), mi(1, 1)) #then mi(64, 50) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 12, 13), mi(1, 1)) #then mi(64, 51) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 11, 12), mi(1, 1)) #then mi(64, 52) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 10, 11), mi(1, 1)) #then mi(64, 53) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 9, 10), mi(1, 1)) #then mi(64, 54) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 8, 9), mi(1, 1)) #then mi(64, 55) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 7, 8), mi(1, 1)) #then mi(64, 56) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 6, 7), mi(1, 1)) #then mi(64, 57) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 5, 6), mi(1, 1)) #then mi(64, 58) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 4, 5), mi(1, 1)) #then mi(64, 59) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 3, 4), mi(1, 1)) #then mi(64, 60) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 2, 3), mi(1, 1)) #then mi(64, 61) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 1, 2), mi(1, 1)) #then mi(64, 62) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 0, 1), mi(1, 1)) #then mi(64, 63) #else mi(64, 64) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi), mi(64, 64)) #then mi(1, 1) #else mi(1, 0) #fi)

"PF" |-> (undefMInt)

"AF" |-> (undefMInt)

"ZF" |-> (#ifMInt eqMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 63, 64), mi(1, 1)) #then mi(64, 0) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 62, 63), mi(1, 1)) #then mi(64, 1) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 61, 62), mi(1, 1)) #then mi(64, 2) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 60, 61), mi(1, 1)) #then mi(64, 3) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 59, 60), mi(1, 1)) #then mi(64, 4) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 58, 59), mi(1, 1)) #then mi(64, 5) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 57, 58), mi(1, 1)) #then mi(64, 6) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 56, 57), mi(1, 1)) #then mi(64, 7) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 55, 56), mi(1, 1)) #then mi(64, 8) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 54, 55), mi(1, 1)) #then mi(64, 9) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 53, 54), mi(1, 1)) #then mi(64, 10) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 52, 53), mi(1, 1)) #then mi(64, 11) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 51, 52), mi(1, 1)) #then mi(64, 12) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 50, 51), mi(1, 1)) #then mi(64, 13) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 49, 50), mi(1, 1)) #then mi(64, 14) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 48, 49), mi(1, 1)) #then mi(64, 15) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 47, 48), mi(1, 1)) #then mi(64, 16) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 46, 47), mi(1, 1)) #then mi(64, 17) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 45, 46), mi(1, 1)) #then mi(64, 18) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 44, 45), mi(1, 1)) #then mi(64, 19) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 43, 44), mi(1, 1)) #then mi(64, 20) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 42, 43), mi(1, 1)) #then mi(64, 21) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 41, 42), mi(1, 1)) #then mi(64, 22) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 40, 41), mi(1, 1)) #then mi(64, 23) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 39, 40), mi(1, 1)) #then mi(64, 24) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 38, 39), mi(1, 1)) #then mi(64, 25) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 37, 38), mi(1, 1)) #then mi(64, 26) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 36, 37), mi(1, 1)) #then mi(64, 27) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 35, 36), mi(1, 1)) #then mi(64, 28) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 34, 35), mi(1, 1)) #then mi(64, 29) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 33, 34), mi(1, 1)) #then mi(64, 30) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 32, 33), mi(1, 1)) #then mi(64, 31) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 31, 32), mi(1, 1)) #then mi(64, 32) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 30, 31), mi(1, 1)) #then mi(64, 33) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 29, 30), mi(1, 1)) #then mi(64, 34) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 28, 29), mi(1, 1)) #then mi(64, 35) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 27, 28), mi(1, 1)) #then mi(64, 36) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 26, 27), mi(1, 1)) #then mi(64, 37) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 25, 26), mi(1, 1)) #then mi(64, 38) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 24, 25), mi(1, 1)) #then mi(64, 39) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 23, 24), mi(1, 1)) #then mi(64, 40) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 22, 23), mi(1, 1)) #then mi(64, 41) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 21, 22), mi(1, 1)) #then mi(64, 42) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 20, 21), mi(1, 1)) #then mi(64, 43) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 19, 20), mi(1, 1)) #then mi(64, 44) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 18, 19), mi(1, 1)) #then mi(64, 45) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 17, 18), mi(1, 1)) #then mi(64, 46) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 16, 17), mi(1, 1)) #then mi(64, 47) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 15, 16), mi(1, 1)) #then mi(64, 48) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 14, 15), mi(1, 1)) #then mi(64, 49) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 13, 14), mi(1, 1)) #then mi(64, 50) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 12, 13), mi(1, 1)) #then mi(64, 51) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 11, 12), mi(1, 1)) #then mi(64, 52) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 10, 11), mi(1, 1)) #then mi(64, 53) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 9, 10), mi(1, 1)) #then mi(64, 54) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 8, 9), mi(1, 1)) #then mi(64, 55) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 7, 8), mi(1, 1)) #then mi(64, 56) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 6, 7), mi(1, 1)) #then mi(64, 57) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 5, 6), mi(1, 1)) #then mi(64, 58) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 4, 5), mi(1, 1)) #then mi(64, 59) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 3, 4), mi(1, 1)) #then mi(64, 60) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 2, 3), mi(1, 1)) #then mi(64, 61) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 1, 2), mi(1, 1)) #then mi(64, 62) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 0, 1), mi(1, 1)) #then mi(64, 63) #else mi(64, 64) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi) #fi), mi(64, 0)) #then mi(1, 1) #else mi(1, 0) #fi)

"SF" |-> (undefMInt)

"OF" |-> (undefMInt)
)

    </regstate>
    
endmodule

module TZCNTQ-R64-R64-SEMANTICS
  imports TZCNTQ-R64-R64
endmodule
