// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VZEROUPPER
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vzeroupper  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
"YMM0" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm0, RSMap), 128, 256))

"YMM1" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm1, RSMap), 128, 256))

"YMM2" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm2, RSMap), 128, 256))

"YMM3" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm3, RSMap), 128, 256))

"YMM4" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm4, RSMap), 128, 256))

"YMM5" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm5, RSMap), 128, 256))

"YMM6" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm6, RSMap), 128, 256))

"YMM7" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm7, RSMap), 128, 256))

"YMM8" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm8, RSMap), 128, 256))

"YMM9" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm9, RSMap), 128, 256))

"YMM10" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm10, RSMap), 128, 256))

"YMM11" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm11, RSMap), 128, 256))

"YMM12" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm12, RSMap), 128, 256))

"YMM13" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm13, RSMap), 128, 256))

"YMM14" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm14, RSMap), 128, 256))

"YMM15" |-> concatenateMInt( mi(128, 0), extractMInt( getParentValue(%ymm15, RSMap), 128, 256))
)

    </regstate>
    
endmodule

module VZEROUPPER-SEMANTICS
  imports VZEROUPPER
endmodule
