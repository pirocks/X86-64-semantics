// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPSRLD-YMM-YMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpsrld R1:Xmm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 192, 256), mi(64, 31)) #then mi(256, 0) #else concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 0, 32), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256))), concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 32, 64), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256))), concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 64, 96), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256))), concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 96, 128), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256))), concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 128, 160), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256))), concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 160, 192), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256))), concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 192, 224), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256))), lshrMInt( extractMInt( getParentValue(R2, RSMap), 224, 256), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256)))))))))) #fi)
)

    </regstate>
    
endmodule

module VPSRLD-YMM-YMM-XMM-SEMANTICS
  imports VPSRLD-YMM-YMM-XMM
endmodule
