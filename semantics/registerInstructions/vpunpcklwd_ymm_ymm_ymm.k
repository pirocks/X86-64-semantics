// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPUNPCKLWD-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpunpcklwd R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 64, 80), extractMInt( getParentValue(R2, RSMap), 64, 80)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 80, 96), extractMInt( getParentValue(R2, RSMap), 80, 96)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 96, 112), extractMInt( getParentValue(R2, RSMap), 96, 112)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 112, 128), extractMInt( getParentValue(R2, RSMap), 112, 128)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), extractMInt( getParentValue(R2, RSMap), 192, 208)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), extractMInt( getParentValue(R2, RSMap), 208, 224)), concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), extractMInt( getParentValue(R2, RSMap), 224, 240)), concatenateMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), extractMInt( getParentValue(R2, RSMap), 240, 256)))))))))
)

    </regstate>
    
endmodule

module VPUNPCKLWD-YMM-YMM-YMM-SEMANTICS
  imports VPUNPCKLWD-YMM-YMM-YMM
endmodule
