// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPACKUSWB-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpackuswb R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 0, 16), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 0, 16), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 8, 16) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 16, 32), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 16, 32), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 24, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 32, 48), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 32, 48), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 40, 48) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 48, 64), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 48, 64), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 56, 64) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 64, 80), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 64, 80), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 72, 80) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 80, 96), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 80, 96), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 88, 96) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 96, 112), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 96, 112), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 104, 112) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 112, 128), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 112, 128), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 120, 128) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 0, 16), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 0, 16), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 8, 16) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 16, 32), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 16, 32), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 24, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 32, 48), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 32, 48), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 40, 48) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 48, 64), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 48, 64), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 56, 64) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 64, 80), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 64, 80), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 72, 80) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 80, 96), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 80, 96), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 88, 96) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 96, 112), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 96, 112), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 104, 112) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 112, 128), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 112, 128), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 120, 128) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 136, 144) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 152, 160) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 168, 176) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 184, 192) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 200, 208) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 216, 224) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 232, 240) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 248, 256) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 136, 144) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 152, 160) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 168, 176) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 184, 192) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 200, 208) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 216, 224) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 232, 240) #fi) #fi), (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 248, 256) #fi) #fi))))))))))))))))))))))))))))))))
)

    </regstate>
    
endmodule

module VPACKUSWB-YMM-YMM-YMM-SEMANTICS
  imports VPACKUSWB-YMM-YMM-YMM
endmodule
