// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module MULB-R8
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (mulb R1:R8,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
"RAX" |-> concatenateMInt( extractMInt( getParentValue(%rax, RSMap), 0, 48), mulMInt( concatenateMInt( mi(8, 0), extractMInt( getParentValue(R1, RSMap), 56, 64)), concatenateMInt( mi(8, 0), extractMInt( getParentValue(%rax, RSMap), 56, 64))))

"CF" |-> (#ifMInt (notBool eqMInt( extractMInt( mulMInt( concatenateMInt( mi(8, 0), extractMInt( getParentValue(R1, RSMap), 56, 64)), concatenateMInt( mi(8, 0), extractMInt( getParentValue(%rax, RSMap), 56, 64))), 0, 8), mi(8, 0))) #then mi(1, 1) #else mi(1, 0) #fi)

"PF" |-> (undefMInt)

"AF" |-> (undefMInt)

"ZF" |-> (undefMInt)

"SF" |-> (undefMInt)

"OF" |-> (#ifMInt (notBool eqMInt( extractMInt( mulMInt( concatenateMInt( mi(8, 0), extractMInt( getParentValue(R1, RSMap), 56, 64)), concatenateMInt( mi(8, 0), extractMInt( getParentValue(%rax, RSMap), 56, 64))), 0, 8), mi(8, 0))) #then mi(1, 1) #else mi(1, 0) #fi)
)

    </regstate>
    
endmodule

module MULB-R8-SEMANTICS
  imports MULB-R8
endmodule
