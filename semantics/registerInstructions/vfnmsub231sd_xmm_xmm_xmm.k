// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VFNMSUB231SD-XMM-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vfnmsub231sd R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( mi(128, 0), concatenateMInt( extractMInt( getParentValue(R3, RSMap), 128, 192), vfmsub132_double(vfnmsub132_double((#ifMInt eqMInt( mincmp_double(concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 160, 192)), concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 224, 256))), mi(1, 1)) #then concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 160, 192)) #else concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 224, 256)) #fi), extractMInt( getParentValue(R2, RSMap), 192, 256), (#ifMInt eqMInt( mincmp_double(concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 160, 192)), concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 224, 256))), mi(1, 1)) #then concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 160, 192)) #else concatenateMInt( mi(32, 0), extractMInt( getParentValue(R2, RSMap), 224, 256)) #fi)), extractMInt( getParentValue(R3, RSMap), 192, 256), extractMInt( getParentValue(R1, RSMap), 192, 256))))
)

    </regstate>
    
endmodule

module VFNMSUB231SD-XMM-XMM-XMM-SEMANTICS
  imports VFNMSUB231SD-XMM-XMM-XMM
endmodule
