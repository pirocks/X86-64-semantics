// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPSADBW-XMM-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpsadbw R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( mi(128, 0), concatenateMInt( concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 128, 136), extractMInt( getParentValue(R1, RSMap), 128, 136)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 128, 136), extractMInt( getParentValue(R1, RSMap), 128, 136)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 128, 136), extractMInt( getParentValue(R2, RSMap), 128, 136)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 136, 144), extractMInt( getParentValue(R1, RSMap), 136, 144)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 136, 144), extractMInt( getParentValue(R1, RSMap), 136, 144)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 136, 144), extractMInt( getParentValue(R2, RSMap), 136, 144)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 144, 152), extractMInt( getParentValue(R1, RSMap), 144, 152)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 144, 152), extractMInt( getParentValue(R1, RSMap), 144, 152)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 144, 152), extractMInt( getParentValue(R2, RSMap), 144, 152)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 152, 160), extractMInt( getParentValue(R1, RSMap), 152, 160)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 152, 160), extractMInt( getParentValue(R1, RSMap), 152, 160)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 152, 160), extractMInt( getParentValue(R2, RSMap), 152, 160)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 160, 168), extractMInt( getParentValue(R1, RSMap), 160, 168)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 160, 168), extractMInt( getParentValue(R1, RSMap), 160, 168)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 160, 168), extractMInt( getParentValue(R2, RSMap), 160, 168)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 168, 176), extractMInt( getParentValue(R1, RSMap), 168, 176)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 168, 176), extractMInt( getParentValue(R1, RSMap), 168, 176)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 168, 176), extractMInt( getParentValue(R2, RSMap), 168, 176)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 176, 184), extractMInt( getParentValue(R1, RSMap), 176, 184)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 176, 184), extractMInt( getParentValue(R1, RSMap), 176, 184)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 176, 184), extractMInt( getParentValue(R2, RSMap), 176, 184)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 184, 192), extractMInt( getParentValue(R1, RSMap), 184, 192)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 184, 192), extractMInt( getParentValue(R1, RSMap), 184, 192)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 184, 192), extractMInt( getParentValue(R2, RSMap), 184, 192)) #fi)))))))))), concatenateMInt( mi(48, 0), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 192, 200), extractMInt( getParentValue(R1, RSMap), 192, 200)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 192, 200), extractMInt( getParentValue(R1, RSMap), 192, 200)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 192, 200), extractMInt( getParentValue(R2, RSMap), 192, 200)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 200, 208), extractMInt( getParentValue(R1, RSMap), 200, 208)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 200, 208), extractMInt( getParentValue(R1, RSMap), 200, 208)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 200, 208), extractMInt( getParentValue(R2, RSMap), 200, 208)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 208, 216), extractMInt( getParentValue(R1, RSMap), 208, 216)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 208, 216), extractMInt( getParentValue(R1, RSMap), 208, 216)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 208, 216), extractMInt( getParentValue(R2, RSMap), 208, 216)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 216, 224), extractMInt( getParentValue(R1, RSMap), 216, 224)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 216, 224), extractMInt( getParentValue(R1, RSMap), 216, 224)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 216, 224), extractMInt( getParentValue(R2, RSMap), 216, 224)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 224, 232), extractMInt( getParentValue(R1, RSMap), 224, 232)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 224, 232), extractMInt( getParentValue(R1, RSMap), 224, 232)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 224, 232), extractMInt( getParentValue(R2, RSMap), 224, 232)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 232, 240), extractMInt( getParentValue(R1, RSMap), 232, 240)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 232, 240), extractMInt( getParentValue(R1, RSMap), 232, 240)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 232, 240), extractMInt( getParentValue(R2, RSMap), 232, 240)) #fi)), addMInt( concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 240, 248), extractMInt( getParentValue(R1, RSMap), 240, 248)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 240, 248), extractMInt( getParentValue(R1, RSMap), 240, 248)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 240, 248), extractMInt( getParentValue(R2, RSMap), 240, 248)) #fi)), concatenateMInt( mi(8, 0), (#ifMInt ugtMInt( extractMInt( getParentValue(R2, RSMap), 248, 256), extractMInt( getParentValue(R1, RSMap), 248, 256)) #then subMInt( extractMInt( getParentValue(R2, RSMap), 248, 256), extractMInt( getParentValue(R1, RSMap), 248, 256)) #else subMInt( extractMInt( getParentValue(R1, RSMap), 248, 256), extractMInt( getParentValue(R2, RSMap), 248, 256)) #fi))))))))))))
)

    </regstate>
    
endmodule

module VPSADBW-XMM-XMM-XMM-SEMANTICS
  imports VPSADBW-XMM-XMM-XMM
endmodule
