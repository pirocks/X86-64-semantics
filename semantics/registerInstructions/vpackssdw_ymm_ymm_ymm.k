// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPACKSSDW-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpackssdw R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 0, 32), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 0, 32), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 32, 64), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 32, 64), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 48, 64) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 64, 96), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 64, 96), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 80, 96) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 96, 128), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 96, 128), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 112, 128) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 0, 32), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 0, 32), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 32, 64), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 32, 64), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 48, 64) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 64, 96), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 64, 96), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 80, 96) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 96, 128), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 96, 128), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 112, 128) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 128, 160), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 128, 160), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 144, 160) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 160, 192), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 160, 192), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 176, 192) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 192, 224), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 192, 224), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 208, 224) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 224, 256), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 224, 256), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R1, RSMap), 240, 256) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 128, 160), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 128, 160), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 144, 160) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 160, 192), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 160, 192), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 176, 192) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 192, 224), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 192, 224), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 208, 224) #fi) #fi), (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 224, 256), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 224, 256), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( getParentValue(R2, RSMap), 240, 256) #fi) #fi))))))))))))))))
)

    </regstate>
    
endmodule

module VPACKSSDW-YMM-YMM-YMM-SEMANTICS
  imports VPACKSSDW-YMM-YMM-YMM
endmodule
