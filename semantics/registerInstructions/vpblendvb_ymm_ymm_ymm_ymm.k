// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPBLENDVB-YMM-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpblendvb R1:Ymm, R2:Ymm, R3:Ymm, R4:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R4) |-> concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 0, 1), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 0, 8) #else extractMInt( getParentValue(R3, RSMap), 0, 8) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 8, 9), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 8, 16) #else extractMInt( getParentValue(R3, RSMap), 8, 16) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 16, 17), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 16, 24) #else extractMInt( getParentValue(R3, RSMap), 16, 24) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 24, 25), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 24, 32) #else extractMInt( getParentValue(R3, RSMap), 24, 32) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 32, 33), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 32, 40) #else extractMInt( getParentValue(R3, RSMap), 32, 40) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 40, 41), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 40, 48) #else extractMInt( getParentValue(R3, RSMap), 40, 48) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 48, 49), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 48, 56) #else extractMInt( getParentValue(R3, RSMap), 48, 56) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 56, 57), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 56, 64) #else extractMInt( getParentValue(R3, RSMap), 56, 64) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 64, 65), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 64, 72) #else extractMInt( getParentValue(R3, RSMap), 64, 72) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 72, 73), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 72, 80) #else extractMInt( getParentValue(R3, RSMap), 72, 80) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 80, 81), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 80, 88) #else extractMInt( getParentValue(R3, RSMap), 80, 88) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 88, 89), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 88, 96) #else extractMInt( getParentValue(R3, RSMap), 88, 96) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 96, 97), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 96, 104) #else extractMInt( getParentValue(R3, RSMap), 96, 104) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 104, 105), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 104, 112) #else extractMInt( getParentValue(R3, RSMap), 104, 112) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 112, 113), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 112, 120) #else extractMInt( getParentValue(R3, RSMap), 112, 120) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 120, 121), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 120, 128) #else extractMInt( getParentValue(R3, RSMap), 120, 128) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 128, 129), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 128, 136) #else extractMInt( getParentValue(R3, RSMap), 128, 136) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 136, 137), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 136, 144) #else extractMInt( getParentValue(R3, RSMap), 136, 144) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 144, 145), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 144, 152) #else extractMInt( getParentValue(R3, RSMap), 144, 152) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 152, 153), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 152, 160) #else extractMInt( getParentValue(R3, RSMap), 152, 160) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 160, 161), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 160, 168) #else extractMInt( getParentValue(R3, RSMap), 160, 168) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 168, 169), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 168, 176) #else extractMInt( getParentValue(R3, RSMap), 168, 176) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 176, 177), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 176, 184) #else extractMInt( getParentValue(R3, RSMap), 176, 184) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 184, 185), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 184, 192) #else extractMInt( getParentValue(R3, RSMap), 184, 192) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 192, 193), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 192, 200) #else extractMInt( getParentValue(R3, RSMap), 192, 200) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 200, 201), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 200, 208) #else extractMInt( getParentValue(R3, RSMap), 200, 208) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 208, 209), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 208, 216) #else extractMInt( getParentValue(R3, RSMap), 208, 216) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 216, 217), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 216, 224) #else extractMInt( getParentValue(R3, RSMap), 216, 224) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 224, 225), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 224, 232) #else extractMInt( getParentValue(R3, RSMap), 224, 232) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 232, 233), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 232, 240) #else extractMInt( getParentValue(R3, RSMap), 232, 240) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 240, 241), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 240, 248) #else extractMInt( getParentValue(R3, RSMap), 240, 248) #fi), (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 248, 249), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 248, 256) #else extractMInt( getParentValue(R3, RSMap), 248, 256) #fi))))))))))))))))))))))))))))))))
)

    </regstate>
    
endmodule

module VPBLENDVB-YMM-YMM-YMM-YMM-SEMANTICS
  imports VPBLENDVB-YMM-YMM-YMM-YMM
endmodule
