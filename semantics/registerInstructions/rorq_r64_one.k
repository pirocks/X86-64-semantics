// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module RORQ-R64-ONE
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (rorq $0x1, R2:R64,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> ror( getParentValue(R2, RSMap), mi(64, 1))

"CF" |-> extractMInt( ror( getParentValue(R2, RSMap), mi(64, 1)), 0, 1)

"OF" |-> (#ifMInt (eqMInt( extractMInt( ror( getParentValue(R2, RSMap), mi(64, 1)), 0, 1), mi(1, 1)) xorBool eqMInt( extractMInt( ror( getParentValue(R2, RSMap), mi(64, 1)), 1, 2), mi(1, 1))) #then mi(1, 1) #else mi(1, 0) #fi)
)

    </regstate>
    
endmodule

module RORQ-R64-ONE-SEMANTICS
  imports RORQ-R64-ONE
endmodule
