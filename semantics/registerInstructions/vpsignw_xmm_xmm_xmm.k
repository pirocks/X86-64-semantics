// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPSIGNW-XMM-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpsignw R1:Xmm, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 128, 144) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 128, 144))) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 144, 160) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 144, 160))) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 160, 176) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 160, 176))) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 176, 192) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 176, 192))) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 192, 208) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 192, 208))) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 208, 224) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 208, 224))) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 224, 240) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 224, 240))) #fi) #fi), (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), mi(16, 0)) #then extractMInt( getParentValue(R2, RSMap), 240, 256) #else (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), mi(16, 0)) #then mi(16, 0) #else addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R2, RSMap), 240, 256))) #fi) #fi)))))))))
)

    </regstate>
    
endmodule

module VPSIGNW-XMM-XMM-XMM-SEMANTICS
  imports VPSIGNW-XMM-XMM-XMM
endmodule
