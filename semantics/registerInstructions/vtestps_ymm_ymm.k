// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VTESTPS-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vtestps R1:Ymm, R2:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
"CF" |-> (#ifMInt (((((((eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 224, 225)), extractMInt( getParentValue(R1, RSMap), 224, 225)), mi(1, 0)) andBool eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 192, 193)), extractMInt( getParentValue(R1, RSMap), 192, 193)), mi(1, 0))) andBool eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 160, 161)), extractMInt( getParentValue(R1, RSMap), 160, 161)), mi(1, 0))) andBool eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 128, 129)), extractMInt( getParentValue(R1, RSMap), 128, 129)), mi(1, 0))) andBool eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 96, 97)), extractMInt( getParentValue(R1, RSMap), 96, 97)), mi(1, 0))) andBool eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 64, 65)), extractMInt( getParentValue(R1, RSMap), 64, 65)), mi(1, 0))) andBool eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 32, 33)), extractMInt( getParentValue(R1, RSMap), 32, 33)), mi(1, 0))) andBool eqMInt( andMInt( negMInt( extractMInt( getParentValue(R2, RSMap), 0, 1)), extractMInt( getParentValue(R1, RSMap), 0, 1)), mi(1, 0))) #then mi(1, 1) #else mi(1, 0) #fi)

"PF" |-> mi(1, 0)

"AF" |-> mi(1, 0)

"ZF" |-> (#ifMInt (((((((eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 224, 225), extractMInt( getParentValue(R1, RSMap), 224, 225)), mi(1, 0)) andBool eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 192, 193), extractMInt( getParentValue(R1, RSMap), 192, 193)), mi(1, 0))) andBool eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 160, 161), extractMInt( getParentValue(R1, RSMap), 160, 161)), mi(1, 0))) andBool eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 128, 129), extractMInt( getParentValue(R1, RSMap), 128, 129)), mi(1, 0))) andBool eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 96, 97), extractMInt( getParentValue(R1, RSMap), 96, 97)), mi(1, 0))) andBool eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 64, 65), extractMInt( getParentValue(R1, RSMap), 64, 65)), mi(1, 0))) andBool eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 32, 33), extractMInt( getParentValue(R1, RSMap), 32, 33)), mi(1, 0))) andBool eqMInt( andMInt( extractMInt( getParentValue(R2, RSMap), 0, 1), extractMInt( getParentValue(R1, RSMap), 0, 1)), mi(1, 0))) #then mi(1, 1) #else mi(1, 0) #fi)

"SF" |-> mi(1, 0)

"OF" |-> mi(1, 0)
)

    </regstate>
    
endmodule

module VTESTPS-YMM-YMM-SEMANTICS
  imports VTESTPS-YMM-YMM
endmodule
