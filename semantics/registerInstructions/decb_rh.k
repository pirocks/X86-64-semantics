// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module DECB-RH
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (decb R1:Rh,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R1) |-> concatenateMInt( concatenateMInt( extractMInt( getParentValue(R1, RSMap), 0, 48), subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1))), extractMInt( getParentValue(R1, RSMap), 56, 64))

"PF" |-> (#ifMInt (notBool (((((((eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 7, 8), mi(1, 1)) xorBool eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 6, 7), mi(1, 1))) xorBool eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 5, 6), mi(1, 1))) xorBool eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 4, 5), mi(1, 1))) xorBool eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 3, 4), mi(1, 1))) xorBool eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 2, 3), mi(1, 1))) xorBool eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 1, 2), mi(1, 1))) xorBool eqMInt( extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 0, 1), mi(1, 1)))) #then mi(1, 1) #else mi(1, 0) #fi)

"AF" |-> (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 52, 56), mi(4, 0)) #then mi(1, 1) #else mi(1, 0) #fi)

"ZF" |-> (#ifMInt eqMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), mi(8, 0)) #then mi(1, 1) #else mi(1, 0) #fi)

"SF" |-> extractMInt( subMInt( extractMInt( getParentValue(R1, RSMap), 48, 56), mi(8, 1)), 0, 1)

"OF" |-> (#ifMInt (eqMInt( extractMInt( getParentValue(R1, RSMap), 48, 49), mi(1, 1)) andBool eqMInt( extractMInt( getParentValue(R1, RSMap), 49, 56), mi(7, 0))) #then mi(1, 1) #else mi(1, 0) #fi)
)

    </regstate>
    
endmodule

module DECB-RH-SEMANTICS
  imports DECB-RH
endmodule
