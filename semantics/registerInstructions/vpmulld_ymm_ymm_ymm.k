// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPMULLD-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpmulld R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 0, 32))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 0, 32)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 32, 64))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 32, 64)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 64, 96))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 64, 96)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 96, 128))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 96, 128)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 128, 160))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 128, 160)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 160, 192))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 160, 192)))), 32, 64), concatenateMInt( extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 192, 224))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 192, 224)))), 32, 64), extractMInt( mulMInt( mi(64, svalueMInt(extractMInt( getParentValue(R2, RSMap), 224, 256))), mi(64, svalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 256)))), 32, 64))))))))
)

    </regstate>
    
endmodule

module VPMULLD-YMM-YMM-YMM-SEMANTICS
  imports VPMULLD-YMM-YMM-YMM
endmodule
