// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module PSLLW-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (psllw R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 128), (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 192, 256), mi(64, 15)) #then mi(128, 0) #else concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256))), shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), uvalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256)))))))))) #fi))
)

    </regstate>
    
endmodule

module PSLLW-XMM-XMM-SEMANTICS
  imports PSLLW-XMM-XMM
endmodule
