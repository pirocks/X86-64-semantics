// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module PACKUSWB-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (packuswb R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 128), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 136, 144) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 152, 160) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 168, 176) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 184, 192) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 200, 208) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 216, 224) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 232, 240) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R1, RSMap), 248, 256) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 128, 144), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 136, 144) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 144, 160), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 152, 160) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 160, 176), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 168, 176) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 176, 192), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 184, 192) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 192, 208), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 200, 208) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 208, 224), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 216, 224) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 224, 240), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 232, 240) #fi) #fi), (#ifMInt sgtMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), mi(16, 255)) #then mi(8, 255) #else (#ifMInt sltMInt( extractMInt( getParentValue(R2, RSMap), 240, 256), mi(16, 0)) #then mi(8, 0) #else extractMInt( getParentValue(R2, RSMap), 248, 256) #fi) #fi)))))))))))))))))
)

    </regstate>
    
endmodule

module PACKUSWB-XMM-XMM-SEMANTICS
  imports PACKUSWB-XMM-XMM
endmodule
