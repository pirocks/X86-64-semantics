// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPBLENDVB-XMM-XMM-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpblendvb R1:Xmm, R2:Xmm, R3:Xmm, R4:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R4) |-> concatenateMInt( mi(128, 0), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 128, 129), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 128, 136) #else extractMInt( getParentValue(R3, RSMap), 128, 136) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 136, 137), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 136, 144) #else extractMInt( getParentValue(R3, RSMap), 136, 144) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 144, 145), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 144, 152) #else extractMInt( getParentValue(R3, RSMap), 144, 152) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 152, 153), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 152, 160) #else extractMInt( getParentValue(R3, RSMap), 152, 160) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 160, 161), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 160, 168) #else extractMInt( getParentValue(R3, RSMap), 160, 168) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 168, 169), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 168, 176) #else extractMInt( getParentValue(R3, RSMap), 168, 176) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 176, 177), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 176, 184) #else extractMInt( getParentValue(R3, RSMap), 176, 184) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 184, 185), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 184, 192) #else extractMInt( getParentValue(R3, RSMap), 184, 192) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 192, 193), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 192, 200) #else extractMInt( getParentValue(R3, RSMap), 192, 200) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 200, 201), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 200, 208) #else extractMInt( getParentValue(R3, RSMap), 200, 208) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 208, 209), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 208, 216) #else extractMInt( getParentValue(R3, RSMap), 208, 216) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 216, 217), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 216, 224) #else extractMInt( getParentValue(R3, RSMap), 216, 224) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 224, 225), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 224, 232) #else extractMInt( getParentValue(R3, RSMap), 224, 232) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 232, 233), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 232, 240) #else extractMInt( getParentValue(R3, RSMap), 232, 240) #fi), concatenateMInt( (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 240, 241), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 240, 248) #else extractMInt( getParentValue(R3, RSMap), 240, 248) #fi), (#ifMInt eqMInt( extractMInt( getParentValue(R1, RSMap), 248, 249), mi(1, 1)) #then extractMInt( getParentValue(R2, RSMap), 248, 256) #else extractMInt( getParentValue(R3, RSMap), 248, 256) #fi)))))))))))))))))
)

    </regstate>
    
endmodule

module VPBLENDVB-XMM-XMM-XMM-XMM-SEMANTICS
  imports VPBLENDVB-XMM-XMM-XMM-XMM
endmodule
