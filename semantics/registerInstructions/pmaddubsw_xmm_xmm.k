// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module PMADDUBSW-XMM-XMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (pmaddubsw R1:Xmm, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 128), concatenateMInt( (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 136, 144))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 136, 144))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 128, 136))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 128, 136)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 136, 144))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 136, 144))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 128, 136))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 128, 136)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 136, 144))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 136, 144))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 128, 136))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 128, 136)))))), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 152, 160))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 152, 160))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 144, 152))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 144, 152)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 152, 160))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 152, 160))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 144, 152))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 144, 152)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 152, 160))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 152, 160))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 144, 152))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 144, 152)))))), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 168, 176))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 168, 176))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 160, 168))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 160, 168)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 168, 176))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 168, 176))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 160, 168))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 160, 168)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 168, 176))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 168, 176))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 160, 168))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 160, 168)))))), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 184, 192))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 184, 192))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 176, 184))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 176, 184)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 184, 192))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 184, 192))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 176, 184))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 176, 184)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 184, 192))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 184, 192))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 176, 184))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 176, 184)))))), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 200, 208))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 200, 208))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 192, 200))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 192, 200)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 200, 208))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 200, 208))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 192, 200))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 192, 200)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 200, 208))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 200, 208))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 192, 200))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 192, 200)))))), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 216, 224))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 216, 224))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 208, 216))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 208, 216)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 216, 224))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 216, 224))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 208, 216))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 208, 216)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 216, 224))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 216, 224))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 208, 216))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 208, 216)))))), 16, 32) #fi) #fi), concatenateMInt( (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 232, 240))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 232, 240))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 232))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 224, 232)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 232, 240))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 232, 240))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 232))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 224, 232)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 232, 240))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 232, 240))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 232))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 224, 232)))))), 16, 32) #fi) #fi), (#ifMInt sgtMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 248, 256))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 248, 256))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 248))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 240, 248)))))), mi(32, 32767)) #then mi(16, 32767) #else (#ifMInt sltMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 248, 256))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 248, 256))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 248))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 240, 248)))))), mi(32, 18446744073709518848)) #then mi(16, 18446744073709518848) #else extractMInt( addMInt( mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 248, 256))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 248, 256))))), mi(32, svalueMInt(mulMInt( mi(16, svalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 248))), concatenateMInt( mi(8, 0), extractMInt( getParentValue(R2, RSMap), 240, 248)))))), 16, 32) #fi) #fi)))))))))
)

    </regstate>
    
endmodule

module PMADDUBSW-XMM-XMM-SEMANTICS
  imports PMADDUBSW-XMM-XMM
endmodule
