// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPMULHW-YMM-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpmulhw R1:Ymm, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 0, 16))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 0, 16)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 16, 32))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 16, 32)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 32, 48))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 32, 48)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 48, 64))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 48, 64)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 64, 80))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 64, 80)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 80, 96))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 80, 96)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 96, 112))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 96, 112)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 112, 128))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 112, 128)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 128, 144))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 128, 144)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 144, 160))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 144, 160)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 160, 176))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 160, 176)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 176, 192))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 176, 192)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 192, 208))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 192, 208)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 208, 224))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 208, 224)))), 0, 16), concatenateMInt( extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 224, 240))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 224, 240)))), 0, 16), extractMInt( mulMInt( mi(32, svalueMInt(extractMInt( getParentValue(R2, RSMap), 240, 256))), mi(32, svalueMInt(extractMInt( getParentValue(R1, RSMap), 240, 256)))), 0, 16))))))))))))))))
)

    </regstate>
    
endmodule

module VPMULHW-YMM-YMM-YMM-SEMANTICS
  imports VPMULHW-YMM-YMM-YMM
endmodule
