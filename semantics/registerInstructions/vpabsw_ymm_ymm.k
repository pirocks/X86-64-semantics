// Autogenerated using stratification.
requires "x86-configuration.k"
requires "x86-flag-checks.k"
module VPABSW-YMM-YMM
  imports X86-CONFIGURATION
  imports X86-FLAG-CHECKS
  rule <k>
    execinstr (vpabsw R1:Ymm, R2:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 0, 16), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 0, 16))) #else extractMInt( getParentValue(R1, RSMap), 0, 16) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 16, 32), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 16, 32))) #else extractMInt( getParentValue(R1, RSMap), 16, 32) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 32, 48), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 32, 48))) #else extractMInt( getParentValue(R1, RSMap), 32, 48) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 48, 64), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 48, 64))) #else extractMInt( getParentValue(R1, RSMap), 48, 64) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 64, 80), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 64, 80))) #else extractMInt( getParentValue(R1, RSMap), 64, 80) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 80, 96), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 80, 96))) #else extractMInt( getParentValue(R1, RSMap), 80, 96) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 96, 112), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 96, 112))) #else extractMInt( getParentValue(R1, RSMap), 96, 112) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 112, 128), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 112, 128))) #else extractMInt( getParentValue(R1, RSMap), 112, 128) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 128, 144), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 128, 144))) #else extractMInt( getParentValue(R1, RSMap), 128, 144) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 144, 160), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 144, 160))) #else extractMInt( getParentValue(R1, RSMap), 144, 160) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 160, 176), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 160, 176))) #else extractMInt( getParentValue(R1, RSMap), 160, 176) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 176, 192), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 176, 192))) #else extractMInt( getParentValue(R1, RSMap), 176, 192) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 192, 208), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 192, 208))) #else extractMInt( getParentValue(R1, RSMap), 192, 208) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 208, 224), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 208, 224))) #else extractMInt( getParentValue(R1, RSMap), 208, 224) #fi), concatenateMInt( (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 224, 240), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 224, 240))) #else extractMInt( getParentValue(R1, RSMap), 224, 240) #fi), (#ifMInt ugtMInt( extractMInt( getParentValue(R1, RSMap), 240, 256), mi(16, 32767)) #then addMInt(mi(16, 1), negMInt( extractMInt( getParentValue(R1, RSMap), 240, 256))) #else extractMInt( getParentValue(R1, RSMap), 240, 256) #fi))))))))))))))))
)

    </regstate>
    
endmodule

module VPABSW-YMM-YMM-SEMANTICS
  imports VPABSW-YMM-YMM
endmodule
